"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertToYamlWithRefs = convertToYamlWithRefs;
const yaml_1 = require("yaml");
function convertToYamlWithRefs(jsonObject) {
    const doc = new yaml_1.Document(jsonObject);
    const cache = new Map();
    function serialize(obj) {
        try {
            return JSON.stringify(obj);
        }
        catch (_a) {
            return null; // Handle non-serializable values
        }
    }
    function isValidAnchorName(str) {
        return /^[a-zA-Z0-9-_]+$/.test(str);
    }
    function manageAnchorsAndAliases(obj, path = []) {
        if (obj && (typeof obj === "object" || Array.isArray(obj))) {
            const serialized = serialize(obj);
            if (serialized === null)
                return;
            if (cache.has(serialized)) {
                const node = cache.get(serialized);
                doc.setIn(path, doc.createAlias(node));
            }
            else {
                const node = doc.getIn(path);
                if (node instanceof yaml_1.YAMLMap || node instanceof yaml_1.YAMLSeq) {
                    const anchorName = path.join("_");
                    if (isValidAnchorName(anchorName)) {
                        node.anchor = anchorName;
                        cache.set(serialized, node);
                    }
                    if (Array.isArray(obj)) {
                        obj.forEach((item, index) => {
                            manageAnchorsAndAliases(item, [...path, index.toString()]);
                        });
                    }
                    else {
                        Object.keys(obj).forEach((key) => {
                            manageAnchorsAndAliases(obj[key], [...path, key]);
                        });
                    }
                }
            }
        }
    }
    manageAnchorsAndAliases(jsonObject);
    return doc.toString();
}
