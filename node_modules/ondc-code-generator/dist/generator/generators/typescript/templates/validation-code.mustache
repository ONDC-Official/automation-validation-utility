
{{#isNested}}

{{{nestedFunctions}}}

const testFunctions: testFunctionArray = [
    {{#names}}
    {{name}},
    {{/names}}
];

let invalidResults: validationOutput = [];
for (const fn of testFunctions) {
    const subResult = fn(input);
    // .filter(r => !r.valid);
    invalidResults = [...invalidResults, ...subResult];
    if(!input.config.runAllValidations && invalidResults.length > 0) {
        return invalidResults;
    }
}
if(invalidResults.length > 0) {
    // return invalidResults;
    subResults = invalidResults;
    valid = subResults.every(r => r.valid);
}

{{/isNested}}

{{^isNested}}
const validate = {{{returnStatement}}}

if(!validate){
    delete testObj._EXTERNAL;
    return [{
        valid: false,
        code: {{errorCode}},
        description: `{{{errorDescription}}}`
    }]
}
{{/isNested}}
