import { removeRequiredAndEnum } from "../utils/config-utils/json-schema-utils.js";
import { getAllJsonPaths } from "../utils/json-path-utils/extract-string-paths.js";
export class SchemaExtactionService {
    constructor() {
        this.extractSchemas = async (data, removeRequired, removeEnums) => {
            const paths = data.paths;
            const apis = Object.keys(paths).map((key) => {
                return key.split("/")[1];
            });
            const output = { paths: {} };
            for (const targetApi of apis) {
                const existingSchema = paths[`/${targetApi}`].post.requestBody.content["application/json"]
                    .schema;
                const filtteredSchema = removeRequiredAndEnum(existingSchema, removeEnums, removeRequired);
                output[targetApi] = filtteredSchema;
            }
            return output;
        };
        this.extractPossiblePaths = (schemas) => {
            const paths = {};
            for (const [key, schema] of Object.entries(schemas)) {
                paths[key] = getAllJsonPaths(schema).map((p) => p
                    .replace(/\.([\w-]+\/[\w-]+)(?![\w\]])/g, (_, match) => `['${match}']`)
                    .replace(/\.(@[\w-\/]+)/g, (_, match) => `['@${match.substring(1)}']`));
            }
            return paths;
        };
    }
}
