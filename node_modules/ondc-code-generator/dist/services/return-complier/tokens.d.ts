import { ILexingResult } from "chevrotain";
export declare const Identifier: import("chevrotain").TokenType;
export declare const CustomBinaryFunctions: import("chevrotain").TokenType;
export declare const CustomUniaryFunctions: import("chevrotain").TokenType;
export declare const AllIn: import("chevrotain").TokenType;
export declare const AnyIn: import("chevrotain").TokenType;
export declare const AreUnique: import("chevrotain").TokenType;
export declare const ArePresent: import("chevrotain").TokenType;
export declare const FollowRegex: import("chevrotain").TokenType;
export declare const NoneIn: import("chevrotain").TokenType;
export declare const EqualTo: import("chevrotain").TokenType;
export declare const GreaterThan: import("chevrotain").TokenType;
export declare const LessThan: import("chevrotain").TokenType;
export declare const WhiteSpace: import("chevrotain").TokenType;
export declare const LParen: import("chevrotain").TokenType;
export declare const RParen: import("chevrotain").TokenType;
export declare const BinaryOperator: import("chevrotain").TokenType;
export declare const AndOperator: import("chevrotain").TokenType;
export declare const OrOperator: import("chevrotain").TokenType;
export declare const NotOperator: import("chevrotain").TokenType;
export declare const allTokens: import("chevrotain").TokenType[];
export declare function ReturnTokenize(inputText: string): ILexingResult;
