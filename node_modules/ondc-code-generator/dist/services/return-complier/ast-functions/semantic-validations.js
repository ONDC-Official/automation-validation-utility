export function checkValidVariables(ast, validVariables, path) {
    if (ast.type === "identifier") {
        const identifier = ast;
        if (!validVariables.includes(identifier.name)) {
            throw new Error(`Invalid variable ${identifier.name} at path ${path}`);
        }
    }
    if (ast.type === "returnStatement") {
        const returnStatement = ast;
        checkValidVariables(returnStatement.expression, validVariables, path);
    }
    if (ast.type === "binaryOperator") {
        const binaryOperator = ast;
        checkValidVariables(binaryOperator.lhs, validVariables, path);
        checkValidVariables(binaryOperator.rhs, validVariables, path);
    }
    if (ast.type === "notOperator") {
        const notOperator = ast;
        checkValidVariables(notOperator.expression, validVariables, path);
    }
    if (ast.type === "customBinaryFunction") {
        const customBinaryFunction = ast;
        checkValidVariables(customBinaryFunction.lhs, validVariables, path);
        checkValidVariables(customBinaryFunction.rhs, validVariables, path);
    }
    if (ast.type === "customUniaryFunction") {
        const customUniaryFunction = ast;
        checkValidVariables(customUniaryFunction.expression, validVariables, path);
    }
}
